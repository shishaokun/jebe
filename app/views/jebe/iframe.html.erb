<style type="text/css">
    body {
        background: url(http://jebe.xnimg.cn/u/assets/baofeng-ad-bg.png) 0 0 no-repeat;
        width: 279px;
        height: 166px;
    }
    #adzone {
        width: 240px;
        height: 160px;
        margin: 0 0 6px 9px;
    }
</style>
<div id="adzone" data-adzone="100000040001">
    <img class="loading" src="http://s.xnimg.cn/mall/common/img/loading.gif"/>
    <div class="inner-brick"></div>
</div>
<script type="text/javascript">
(function(doc) {
    var env, head, pending = {}, pollCount = 0, queue = {
        css : [],
        js : []
    }, styleSheets = doc.styleSheets;

    function createNode(name, attrs) {
        var node = doc.createElement(name), attr;

        for (attr in attrs) {
            if (attrs.hasOwnProperty(attr)) {
                node.setAttribute(attr, attrs[attr]);
            }
        }

        return node;
    }

    function finish(type) {
        var p = pending[type], callback, urls;

        if (p) {
            callback = p.callback;
            urls = p.urls;

            urls.shift();
            pollCount = 0;

            if (!urls.length) {
                callback && callback.call(p.context, p.obj);
                pending[type] = null;
                queue[type].length && load(type);
            }
        }
    }

    function getEnv() {
        var ua = navigator.userAgent;

        env = {
            async : doc.createElement('script').async === true
        };

        (env.webkit = /AppleWebKit\//.test(ua)) || (env.ie = /MSIE/.test(ua)) || (env.opera = /Opera/.test(ua)) || (env.gecko = /Gecko\//.test(ua)) || (env.unknown = true);
    }

        function load(type, urls, callback, obj, context) {
            var _finish = function() {
                finish(type);
            }, isCSS = type === 'css', nodes = [], i, len, node, p, pendingUrls, url;

            env || getEnv();

            if (urls) {
                urls = typeof urls === 'string' ? [urls] : urls.concat();

                if (isCSS || env.async || env.gecko || env.opera) {
                    queue[type].push({
                        urls : urls,
                        callback : callback,
                        obj : obj,
                        context : context
                    });
                } else {
                    for ( i = 0, len = urls.length; i < len; ++i) {
                        queue[type].push({
                            urls : [urls[i]],
                            callback : i === len - 1 ? callback : null,
                            obj : obj,
                            context : context
                        });
                    }
                }
            }

            if (pending[type] || !( p = pending[type] = queue[type].shift())) {
                return;
            }

            head || ( head = doc.head || doc.getElementsByTagName('head')[0]);
            pendingUrls = p.urls;

            for ( i = 0, len = pendingUrls.length; i < len; ++i) {
                url = pendingUrls[i];

                if (isCSS) {
                    node = env.gecko ? createNode('style') : createNode('link', {
                        href : url,
                        rel : 'stylesheet'
                    });
                } else {
                    node = createNode('script', {
                        src : url
                    });
                    node.async = false;
                }

                node.className = 'lazyload';
                node.setAttribute('charset', 'utf-8');

                if (env.ie && !isCSS) {
                    node.onreadystatechange = function() {
                        if (/loaded|complete/.test(node.readyState)) {
                            node.onreadystatechange = null;
                            _finish();
                        }
                    };
                } else if (isCSS && (env.gecko || env.webkit)) {
                    if (env.webkit) {
                        p.urls[i] = node.href;
                        pollWebKit();
                    } else {
                        node.innerHTML = '@import "' + url + '";';
                        pollGecko(node);
                    }
                } else {
                    node.onload = node.onerror = _finish;
                }

                nodes.push(node);
            }

            for ( i = 0, len = nodes.length; i < len; ++i) {
                head.appendChild(nodes[i]);
            }
        }

        function pollGecko(node) {
            var hasRules;

            try {
                hasRules = !!node.sheet.cssRules;
            } catch (ex) {
                pollCount += 1;

                if (pollCount < 200) {
                    setTimeout(function() {
                        pollGecko(node);
                    }, 50);
                } else {
                    hasRules && finish('css');
                }

                return;
            }

            finish('css');
        }

        function pollWebKit() {
            var css = pending.css, i;

            if (css) {
                i = styleSheets.length;

                while (--i >= 0) {
                    if (styleSheets[i].href === css.urls[0]) {
                        finish('css');
                        break;
                    }
                }

                pollCount += 1;

                if (css) {
                    if (pollCount < 200) {
                        setTimeout(pollWebKit, 50);
                    } else {
                        finish('css');
                    }
                }
            }
        }


        window.LazyLoad = {

            css : function(urls, callback, obj, context) {
                load('css', urls, callback, obj, context);
            },

            js : function(urls, callback, obj, context) {
                load('js', urls, callback, obj, context);
            }
        };
})(this.document);

var adzone = document.getElementById('adzone');
var url = 'http://ebp.renren.com/ebpn/show?t='+ +new Date() + '&r=http%3A%2F%2Fstatic.jebe.renren.com%2Fu%2F'+adzone.getAttribute('data-adzone');
LazyLoad.js(url, function () {
    if (jebe_json.list[0].ads[0]) {console.log(jebe_json.list[0].ads[0])
        var url = 'http://jebe.xnimg.cn/widgetbox/main/content/'+jebe_json.list[0].ads[0].widget_id+','+jebe_json.list[0].ads[0].widget_version+','+jebe_json.list[0].adzone_id+',runtime-jebe_template.';
        LazyLoad.js(url, function () {
            adzone.removeChild(adzone.getElementsByTagName('img')[0]);
            adzone.getElementsByTagName('div')[0].innerHTML = jebe_template[0].html.replace(new RegExp(jebe_template[0].placeholder, 'g'), '');
            eval('('+jebe_template[0].js+';init(eval("("+jebe_json.list[0].ads[0].widget+")"),jebe_json.list[0].ads[0].ad_param, document);'+')');
        });
    }
    else {
        console.log('no ad')
    }
});

</script>